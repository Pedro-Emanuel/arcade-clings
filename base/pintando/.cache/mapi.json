{
    "title": "L2 - @pintando a casa",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>L2 - @pintando a casa</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"l2---pintando-a-casa\">L2 - <span class=\"citation\"\ndata-cites=\"pintando\">@pintando</span> a casa</h1>\n<table>\n<colgroup>\n<col style=\"width: 25%\" />\n<col style=\"width: 25%\" />\n<col style=\"width: 25%\" />\n<col style=\"width: 25%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#motiva\u00e7\u00e3o\">Motiv</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#dicas\">Dicas</a></th>\n<th><a href=\"#resolu\u00e7\u00e3o\">Resol</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/pintando/cover.jpg\"\nalt=\"Casa\" />\n<figcaption aria-hidden=\"true\">Casa</figcaption>\n</figure>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Fernando comprou uma casa triangular. Ao tentar calcular a quantidade\nde tinta necess\u00e1ria para pintar as paredes, ele percebeu que precisava\nsaber como calcular a \u00e1rea de um tri\u00e2ngulo. Felizmente, ele encontrou a\nF\u00f3rmula de Heron, que permite calcular a \u00e1rea de um tri\u00e2ngulo a partir\ndo tamanho de seus lados.</p>\n<p>Implemente um programa que, dado o tamanho dos tr\u00eas lados de um\ntri\u00e2ngulo, calcule a \u00e1rea utilizando a F\u00f3rmula de Heron:</p>\n<p><img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/pintando/heron.jpg\"\nalt=\"formula\" />\u200b</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Tr\u00eas n\u00fameros em ponto flutuante representando os lados do tri\u00e2ngulo,\num por linha.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>A \u00e1rea do tri\u00e2ngulo com duas casas decimais.</li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#INPUT</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">4</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#OUTPUT</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">6.00</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#</span><span class=\"re\">END</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#INPUT</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">10</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">12</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">16</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#OUTPUT</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">59.92</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#</span><span class=\"re\">END</span></span></code></pre></div>\n<h3 id=\"dicas\">Dicas</h3>\n<ul>\n<li><strong>C</strong> - Para exibir um n\u00famero de ponto flutuante do\ntipo <code>double</code>, recomendado por sua maior precis\u00e3o, com seis\ncasas decimais em C, utilize o especificador de formato\n<code>%.6f</code> na fun\u00e7\u00e3o <code>printf</code>. O n\u00famero\n<strong>6</strong> ap\u00f3s o ponto indica a quantidade de casas decimais a\nserem exibidas:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> main<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">double</span> resultado<span class=\"op\">;</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    printf<span class=\"op\">(</span><span class=\"st\">&quot;</span><span class=\"sc\">%.6f\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span> resultado<span class=\"op\">);</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<ul>\n<li><strong>Python</strong> - Para exibir um n\u00famero de ponto flutuante\ncom seis casas decimais em Python, utilize o formato <code>:.6f</code>\ndentro da fun\u00e7\u00e3o <code>print</code>. O n\u00famero <strong>6</strong> ap\u00f3s o\nponto indica o n\u00famero de casas decimais que ser\u00e3o exibidas:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb4\"><pre\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"ss\">f&quot;</span><span class=\"sc\">{</span>resultado<span class=\"sc\">:.6f}</span><span class=\"ss\">&quot;</span>)</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">-</span> ou <span class=\"op\">-</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;</span><span class=\"sc\">{:.6f}</span><span class=\"st\">&quot;</span>.<span class=\"bu\">format</span>(resultado))</span></code></pre></div>\n<ul>\n<li><strong>TypeScript</strong> - Para exibir um n\u00famero com seis casas\ndecimais em TypeScript, utilize o m\u00e9todo <code>toFixed(6)</code> do\nobjeto <code>Number</code>. O n\u00famero <strong>6</strong> especifica a\nquantidade de casas decimais que ser\u00e3o exibidas ap\u00f3s o ponto\ndecimal:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">log</span>(resultado<span class=\"op\">.</span><span class=\"fu\">toFixed</span>(<span class=\"dv\">6</span>))<span class=\"op\">;</span> </span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">-</span> ou <span class=\"op\">-</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">write</span>(resultado<span class=\"op\">.</span><span class=\"fu\">toFixed</span>(<span class=\"dv\">6</span>))<span class=\"op\">;</span></span></code></pre></div>\n<h3 id=\"resolu\u00e7\u00e3o\">Resolu\u00e7\u00e3o</h3>\n<ul>\n<li><a href=\"https://youtu.be/nlgT_jAtmy4\">C++</a></li>\n</ul>\n<p><a href=\"https://youtu.be/sWg893W5r_w\">Resolu\u00e7\u00e3o</a></p>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "#INPUT\n4\n3\n5\n#OUTPUT\n6.00\n#END\n\n#INPUT\n10\n12\n16\n#OUTPUT\n59.92\n#END\n\n#INPUT 03\n12\n15\n13\n#OUTPUT\n74.83\n#END\n\n#INPUT 04\n3.4\n4.5\n5.1\n#OUTPUT\n7.51\n#END\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
