{
    "title": "L2 - @monica - A idade do filho mais velho - OBI 2019 - F1PJ",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>L2 - @monica - A idade do filho mais velho - OBI 2019 -\nF1PJ</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"l2---monica---a-idade-do-filho-mais-velho---obi-2019---f1pj\">L2\n- <span class=\"citation\" data-cites=\"monica\">@monica</span> - A idade do\nfilho mais velho - OBI 2019 - F1PJ</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/monica/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<p>Dona M\u00f4nica \u00e9 m\u00e3e de tr\u00eas filhos que t\u00eam idades diferentes. Ela notou\nque, neste ano, a soma das idades dos seus tr\u00eas filhos \u00e9 igual \u00e0 idade\ndela. Neste problema, dada a idade de dona M\u00f4nica e as idades de dois\ndos filhos, seu programa deve computar e imprimir a idade do filho mais\nvelho.</p>\n<p>Por exemplo, se sabemos que dona M\u00f4nica tem 52 anos e as idades\nconhecidas de dois dos filhos s\u00e3o 14 e 18 anos, ent\u00e3o a idade do outro\nfilho, que n\u00e3o era conhecida, tem que ser 20 anos, pois a soma das tr\u00eas\nidades tem que ser 52. Portanto, a idade do filho mais velho \u00e9 20.</p>\n<p>Em mais um exemplo, se dona M\u00f4nica tem 47 anos e as idades de dois\ndos filhos s\u00e3o 21 e 9 anos, ent\u00e3o o outro filho tem que ter 17 anos e,\nportanto, a idade do filho mais velho \u00e9 21.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A primeira linha da entrada cont\u00e9m um inteiro M representando a\nidade de dona M\u00f4nica.<br />\n</li>\n<li>A segunda linha da entrada cont\u00e9m um inteiro A representando a idade\nde um dos filhos.</li>\n<li>A terceira linha da entrada cont\u00e9m um inteiro B representando a\nidade de outro filho.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Seu programa deve imprimir uma linha, contendo um n\u00famero inteiro,\nrepresentando a idade do filho mais velho de dona M\u00f4nica.</li>\n</ul>\n<p>Restri\u00e7\u00f5es:</p>\n<ul>\n<li>40 \u2264 M \u2264 110</li>\n<li>1 \u2264 A &lt; M</li>\n<li>1 \u2264 B &lt; M</li>\n<li>A !=B</li>\n</ul>\n<h2 id=\"exemplo\">Exemplo</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#INPUT</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">52</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">14</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">18</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#OUTPUT</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">20</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#</span><span class=\"re\">END</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#INPUT</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">47</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">21</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">9</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#OUTPUT</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">21</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#</span><span class=\"re\">END</span></span></code></pre></div>\n<h2 id=\"dica\">Dica</h2>\n<p>Ap\u00f3s a descobrir qual a idade do filho que falta voc\u00ea precisar\u00e1\ndescobrir qual dos filhos \u00e9 o mais velho. Um operador tern\u00e1rio pode\nsimplificar a conta. Ele \u00e9 da seguinte forma:</p>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// x = condicao ? valor_verdade : valor_falso</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// leia assim: se 5 for maior que 4, ent\u00e3o 5, sen\u00e3o 4.</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> maior <span class=\"op\">=</span> <span class=\"op\">(</span><span class=\"dv\">5</span> <span class=\"op\">&gt;</span> <span class=\"dv\">4</span><span class=\"op\">)</span> <span class=\"op\">?</span> <span class=\"dv\">5</span> <span class=\"op\">:</span> <span class=\"dv\">4</span><span class=\"op\">;</span> </span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// voc\u00ea pode utilizar isso pra pegar o maior valor de duas vari\u00e1veis</span></span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> maior <span class=\"op\">=</span> A <span class=\"op\">&gt;</span> B <span class=\"op\">?</span> A <span class=\"op\">:</span> B<span class=\"op\">;</span> <span class=\"co\">//pega o maior de A e B</span></span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>maior <span class=\"op\">=</span> C <span class=\"op\">&gt;</span> maior <span class=\"op\">?</span> C <span class=\"op\">:</span> maior<span class=\"op\">;</span> <span class=\"co\">//pega o maior de maior e C</span></span></code></pre></div>\n<p>Em python ter\u00edamos assim:</p>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># deixe 5, se 5 for maior que 4, sen\u00e3o deixe 4</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">int</span> x <span class=\"op\">=</span> <span class=\"dv\">5</span> <span class=\"cf\">if</span> <span class=\"dv\">5</span> <span class=\"op\">&gt;</span> <span class=\"dv\">4</span> <span class=\"cf\">else</span> <span class=\"dv\">4</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># deixe A, se A for maior que B, sen\u00e3o deixe B</span></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">int</span> x <span class=\"op\">=</span> A <span class=\"cf\">if</span> A <span class=\"op\">&gt;</span> B <span class=\"cf\">else</span> B</span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "#INPUT\n52\n14\n18\n#OUTPUT\n20\n#END\n\n#INPUT\n47\n21\n9\n#OUTPUT\n21\n#END\n\n#INPUT\n109\n20\n30\n#OUTPUT\n59\n#END\n\n#INPUT\n69\n3\n18\n#OUTPUT\n48\n#END\n\n#INPUT\n60\n16\n17\n#OUTPUT\n27\n#END\n\n#INPUT\n84\n4\n30\n#OUTPUT\n50\n#END\n\n#INPUT\n63\n2\n6\n#OUTPUT\n55\n#END\n\n#INPUT\n87\n13\n14\n#OUTPUT\n60\n#END\n\n#INPUT\n83\n30\n18\n#OUTPUT\n35\n#END\n\n#INPUT\n73\n20\n40\n#OUTPUT\n40\n#END\n\n#INPUT\n110\n31\n21\n#OUTPUT\n58\n#END\n\n#INPUT\n85\n11\n10\n#OUTPUT\n64\n#END\n\n#INPUT\n74\n4\n12\n#OUTPUT\n58\n#END\n\n#INPUT\n42\n9\n21\n#OUTPUT\n21\n#END\n\n#INPUT\n103\n50\n40\n#OUTPUT\n50\n#END\n\n#INPUT\n89\n2\n75\n#OUTPUT\n75\n#END\n\n#INPUT\n76\n15\n21\n#OUTPUT\n40\n#END\n\n#INPUT\n100\n14\n25\n#OUTPUT\n61\n#END\n\n#INPUT\n87\n36\n28\n#OUTPUT\n36\n#END\n\n#INPUT\n78\n10\n51\n#OUTPUT\n51\n#END\n\n#INPUT\n96\n42\n25\n#OUTPUT\n42\n#END\n\n#INPUT\n91\n27\n8\n#OUTPUT\n56\n#END\n\n#INPUT\n41\n25\n6\n#OUTPUT\n25\n#END\n\n#INPUT\n47\n19\n7\n#OUTPUT\n21\n#END\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
