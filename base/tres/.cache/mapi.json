{
    "title": "L0 - @tres - soma de inteiros",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>L0 - @tres - soma de inteiros</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"l0---tres---soma-de-inteiros\">L0 - <span class=\"citation\"\ndata-cites=\"tres\">@tres</span> - soma de inteiros</h1>\n<ul>\n<li>Veja a vers\u00e3o online: <a\nhref=\"https://github.com/qxcodefup/arcade/blob/master/base/tres/Readme.md\">aqui.</a></li>\n<li>Para programar na sua m\u00e1quina (local/virtual) use:\n<ul>\n<li><code>tko down fup tres</code></li>\n</ul></li>\n<li>Se n\u00e3o tem o <code>tko</code>, instale pelo <a\nhref=\"https://github.com/senapk/tko#tko\">LINK</a>.</li>\n</ul>\n<hr />\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/tres/cover.jpg\"\nalt=\"Imagem Soma Simples\" />\n<figcaption aria-hidden=\"true\">Imagem Soma Simples</figcaption>\n</figure>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Escreva um programa que recebe tr\u00eas n\u00fameros inteiros e retorna a\nsoma.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Tr\u00eas inteiros, um por linha.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Soma dos tr\u00eas inteiros</li>\n</ul>\n<h3 id=\"observa\u00e7\u00e3o\">Observa\u00e7\u00e3o</h3>\n<ul>\n<li>Pule uma linha com <code>'\\n'</code> depois de mostrar a soma.</li>\n<li>Exemplo: std::cout &lt;&lt; soma &lt;&lt; \u2018\u2019;</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n2\n3\n4\n========\n9\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n12\n17\n24\n========\n53\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n-10\n-4\n23\n========\n9\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>>\n2\n3\n4\n========\n9\n<<<<<<<<\n\n>>>>>>>>\n12\n17\n24\n========\n53\n<<<<<<<<\n\n>>>>>>>>\n-10\n-4\n23\n========\n9\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
